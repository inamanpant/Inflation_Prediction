#importing the libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.ensemble import RandomForestRegressor
from sklearn.preprocessing import LabelEncoder
from sklearn.metrics import mean_squared_error

# Load the dataset
df = pd.read_csv('/content/ml dataset.csv')
df.head(10)

# Preprocess the data
X = df.drop('Inflation, consumer prices (annual %)', axis=1)
y = df['Inflation, consumer prices (annual %)']
le = LabelEncoder()
X['Year'] = le.fit_transform(X['Year'])
X_train = X.iloc[:-5]
y_train = y.iloc[:-5]
X_test = X.iloc[-5:]
y_test = y.iloc[-5:]

# Train the model
model = RandomForestRegressor(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

# Evaluate the model
y_pred = model.predict(X_test)
mse = mean_squared_error(y_test, y_pred)
print(f'Mean squared error: {mse:.2f}') 

# Forecast future values
years = [2022, 2023, 2024, 2025, 2026]
X_pred = pd.DataFrame({'Year': years})


X_pred['GDP_In_Billion_USD'] = [3000, 3200, 3400, 3600, 3800]
X_pred['GDP growth (annual %)'] = [5.0, 5.2, 5.5, 5.7, 5.9]
X_pred['Imports of goods and services (% of GDP)'] = [25, 24, 23, 22, 23]
X_pred['Exports of goods and services (% of GDP)'] = [22, 21, 20, 19, 24]
X_pred['Population, total'] = [1400000000, 1420000000, 1440000000, 1460000000, 1480000000]
X_pred['Population growth (annual %)'] = [1.2, 1.1, 1.0, 1.0, 1.0]
X_pred['exchange_rate Indian rupees to one dollor'] = [70, 72, 74, 76, 78]
inflation_pred = model.predict(X_pred)
for year, inflation in zip(years, inflation_pred):
    print(f'The predicted inflation rate for the year {year} is {inflation:.2f}%.')

# Plot the predicted values
years_all = df['Year'].unique()
X_all = pd.DataFrame({'Year': years_all})
X_all['Year'] = le.transform(X_all['Year'])
X_all['GDP_In_Billion_USD'] = df.groupby('Year')['GDP_In_Billion_USD'].mean().values
X_all['GDP growth (annual %)'] = df.groupby('Year')['GDP growth (annual %)'].mean().values
X_all['Imports of goods and services (% of GDP)'] = df.groupby('Year')['Imports of goods and services (% of GDP)'].mean().values
X_all['Exports of goods and services (% of GDP)'] = df.groupby('Year')['Exports of goods and services (% of GDP)'].mean().values
X_all['Population, total'] = df.groupby('Year')['Population, total'].mean().values
X_all['Population growth (annual %)'] = df.groupby('Year')['Population growth (annual %)'].mean().values
X_all['exchange_rate Indian rupees to one dollor'] = df.groupby('Year')['exchange_rate Indian rupees to one dollor'].mean().values
X_all['Inflation, consumer prices (annual %)'] = df.groupby('Year')['Inflation, consumer prices (annual %)'].mean().values

# Predicted inflation rates for the years 2022 to 2026
predicted_rates = [6.00, 5.77, 6.66, 8.58, 5.71]

# Years for which the inflation rates are predicted
years = [2022, 2023, 2024, 2025, 2026]

# Plotting the predicted inflation rates against years
plt.plot(years, predicted_rates, 'o-')

# Setting the title and axis labels
plt.title('Predicted Inflation Rates')
plt.xlabel('Year')
plt.ylabel('Inflation Rate (%)')

# Displaying the plot
plt.show()
